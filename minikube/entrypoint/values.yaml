LISTEN_PORT: 3000
LOG_LEVEL: ERROR

replicaCount: 1

env:
  - name: LISTEN_HTTP_ADDR
    value: ":{{ .Values.LISTEN_PORT }}"
  - name: LOG_LEVEL
    value: "{{ .Values.LOG_LEVEL }}"

image:
  repository: chelyshkin/golang-playground-entrypoint
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "pod-manager"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  serviceAccountName: fluent-bit
  type: ClusterIP
  port: 3000

ingress:
  enabled: true
  className: ""
  annotations: {
    nginx.ingress.kubernetes.io/rewrite-target: "/",
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  }
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: entrypoint
              port: "{{ .Values.LISTEN_PORT }}"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
